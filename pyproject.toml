[project]
name = "mdpo"
version = "1.1.2"
description = "Markdown files translation using PO files."
readme = "README.md"
license = "BSD-3-Clause"
authors = [{ name = "Álvaro Mondéjar Rubio", email = "mondejar1994@gmail.com" }]
requires-python = ">=3.7,<3.12"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Operating System :: OS Independent",
  "License :: OSI Approved :: BSD License",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Internationalization",
  "Topic :: Text Processing",
  "Topic :: Text Processing :: Markup :: Markdown",
  "Environment :: Console",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
keywords = ["markdown", "pofile", "translation", "html", "po", "i18n"]
dependencies = [
  "polib~=1.1",
  "pymd4c~=1.3",
  "md-ulb-pwrap==0.0.3",
  "importlib-metadata-argparse-version",
  "importlib-metadata; python_version < '3.10'",
  "contextlib-chdir~=1.0",
]

[project.urls]
Source = "https://github.com/mondeja/mdpo"
Documentation = "https://mondeja.github.io/mdpo"
"Bug tracker" = "https://github.com/mondeja/mdpo/issues"
Changelog = "https://github.com/mondeja/mdpo/releases"

[tool.hatch.build]
include = ["/src"]

[tool.hatch.build.targets.wheel]
packages = ["src/mdpo"]

[project.scripts]
md2po = "mdpo.md2po.__main__:main"
po2md = "mdpo.po2md.__main__:main"
md2po2md = "mdpo.md2po2md.__main__:main"
mdpo2html = "mdpo.mdpo2html.__main__:main"

[tool.hatch.envs.default]
python = "3.10"
dependencies = ["mondeja-bump"]

[tool.hatch.envs.style]
python = "3.10"
detached = true
dependencies = ["pre-commit"]

[tool.hatch.envs.style.scripts]
lint = "pre-commit run -a"

[tool.hatch.envs.tests]
dependencies = [
  "pytest~=7.0",
  "coverage~=6.4",
  "pytest-maybe-raises~=0.1",
  "pre-commit",
]

[tool.hatch.envs.tests.scripts]
all = "coverage run -m pytest"
unit = "coverage run -m pytest tests/test_unit"
integration = "coverage run -m pytest tests/test_integration --override-ini addopts=-svv"
cov = [
  "hatch run +py=py310 tests:all",
  "coverage html",
  "python -c 'import webbrowser as w;w.open(\"http://127.0.0.1:8088\")'",
  "python -m http.server 8088 -b localhost -d htmlcov"
]

[[tool.hatch.envs.tests.matrix]]
python = ["py37", "py38", "py39", "py310", "py311"]

[tool.hatch.envs.docs]
python = "3.10"
dependencies = [
  "Sphinx~=4.0",
  "sphinx-rtd-theme~=1.0",
  "sphinx-argparse-cli~=1.8",
  "sphinx-github-changelog~=1.2",
  "sphinx-tabs~=3.3",
]

[tool.hatch.envs.docs.scripts]
build = "python -m sphinx -n -T -E -W docs docs/_build/html"
serve = """python -m sphinx -n -T -E -W docs docs/_build/html &&
python -c 'import webbrowser as w;w.open("http://127.0.0.1:8089")' &&
python -m http.server 8089 -b localhost -d docs/_build/html"""

[tool.bump]
targets = [{ file = "pyproject.toml" }, { file = "docs/pre-commit-hooks.rst" }]

[tool.project-config]
cache = "2 days"
style = [
  "gh://mondeja/project-config-styles@v4.2/python/base.json5",
  "gh://mondeja/project-config-styles@v4.2/python/single-quotes.json5",
  "gh://mondeja/project-config-styles@v4.2/python/line-length-80.json5",
  "gh://mondeja/project-config-styles@v4.2/python/tests.json5",
  "gh://mondeja/project-config-styles@v4.2/python/sphinx.json5",
  "gh://mondeja/project-config-styles@v4.2/python/readthedocs.json5",
  "gh://mondeja/project-config-styles@v4.2/python/google-docstrings.json5"
]

[tool.pytest.ini_options]
addopts = "-s"

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__\\(",
  "raise NotImplementedError",
  "@(abc\\.)?abstractmethod",
  "if __name__ == [\"']__main__[\"']:",
  "if '-h' in args or '--help' in args:"
]

[tool.flakeheaven]
inline-quotes = "single"
max-line-length = 80
pytest-fixture-no-parentheses = true
pytest-parametrize-values-type = "tuple"
docstring-convention = "google"
unused-arguments-ignore-abstract-functions = true

[tool.flakeheaven.plugins]
pycodestyle = ["+*", "-W503"]
pyflakes = ["+*"]
pylint = ["+*"]
flake8-builtins = ["+*"]
flake8-comprehensions = ["+*"]
flake8-docstrings = ["+*", "-D107", "-D105"]
flake8-executable = ["+*"]
flake8-implicit-str-concat = ["+*"]
flake8-print = ["+*"]
flake8-printf-formatting = ["+*"]
flake8-pytest-style = ["+*"]
flake8-bugbear = ["+*"]
flake8-encodings = ["+*"]
flake8-no-pep420 = ["+*"]
flake8-absolute-import = ["+*"]
flake8-unused-arguments = ["+*"]
flake8-slots = ["+*"]
dlint = ["+*"]

[tool.flakeheaven.exceptions."docs/**"]
flake8-print = ["-T201"]
flake8-docstrings = ["-D100", "-D101", "-D102"]
flake8-no-pep420 = ["-INP001"]

[tool.flakeheaven.exceptions."tests/**"]
flake8-docstrings = [
  "-D100",
  "-D101",
  "-D102",
  "-D103",
  "-D104",
  "-D107",
  "-D205",
  "-D415"
]
flake8-no-pep420 = ["-INP001"]

[tool.flakeheaven.exceptions."setup.py"]
flake8-docstrings = ["-D205"]
flake8-no-pep420 = ["-INP001"]

[tool.flakeheaven.exceptions."src/**/*.py"]
flake8-docstrings = ["-D101", "-D102", "-D103", "-D107"]

[tool.flakeheaven.exceptions."src/md.py"]
flake8-docstrings = ["-D101", "-D102", "-D107"]

[tool.isort]
lines_after_imports = 2
multi_line_output = 3
line_length = 79
use_parentheses = true
combine_as_imports = true
include_trailing_comma = true
remove_redundant_aliases = true
known_tests = "tests"
sections = [
  "FUTURE",
  "STDLIB",
  "THIRDPARTY",
  "FIRSTPARTY",
  "TESTS",
  "LOCALFOLDER"
]
py_version = 37
extra_standard_library = [
  "contextvars",
  "dataclasses",
  "importlib.resources",
  "importlib.metadata",
  "zoneinfo",
  "graphlib",
  "tomllib",
  "wsgiref.types"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
