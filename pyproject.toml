[tool.poetry]
name = "mdpo"
version = "1.0.3"
description = "Markdown files translation using PO files."
readme = "README.md"
license = "BSD-3-Clause"
authors = ["Álvaro Mondéjar Rubio <mondejar1994@gmail.com>"]
repository = "https://github.com/mondeja/mdpo"
documentation = "https://mondeja.github.io/mdpo/"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Operating System :: OS Independent",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Internationalization",
  "Topic :: Text Processing",
  "Topic :: Text Processing :: Markup :: Markdown"
]

[[tool.poetry.packages]]
include = "mdpo"
from = "src"

[tool.poetry.scripts]
md2po = "mdpo.md2po.__main__:main"
po2md = "mdpo.po2md.__main__:main"
md2po2md = "mdpo.md2po2md.__main__:main"
mdpo2html = "mdpo.mdpo2html.__main__:main"

[tool.poetry.urls]
"Bug tracker" = "https://github.com/mondeja/mdpo/issues"
Changelog = "https://github.com/mondeja/mdpo/releases"

[tool.poetry.dependencies]
python = "^3.7"
polib = "^1.1.0"
pymd4c = "~1.1.2"
importlib-metadata-argparse-version = "^0.1.0"
importlib-metadata = { version = "*", python = "<3.10" }
contextlib-chdir = "^1.0.1"

[tool.poetry.group.dev.dependencies]
mondeja-bump = "*"
project-config = "^0.7.3"

[tool.poetry.group.test.dependencies]
pytest = "^7"
pytest-cov = "^3"
pytest-maybe-raises = "^0.1.1"
pre-commit = "^2.19.0"

[tool.poetry.group.doc.dependencies]
Sphinx = "^4"
sphinx-argparse-cli = "~1.8.3"
sphinx-github-changelog = "~1.2.0"
sphinx-rtd-theme = "~1.0.0"
sphinx-tabs = "~3.3.0"

[tool.poetry.group.doc.dependencies.importlib-metadata]
version = "*"
python = "3.7"

[build-system]
requires = ["poetry-core>=1.1.0b2"]
build-backend = "poetry.core.masonry.api"

[[tool.bump.targets]]
file = "pyproject.toml"

[[tool.bump.targets]]
file = "docs/pre-commit-hooks.rst"

[tool.poetry-exec-plugin.commands]
t = "pytest"
test = "pytest"
"test:all" = "pytest"
"test:unit" = "pytest tests/test_unit"
"test:integration" = "pytest tests/test_integration --override-ini addopts=-svv"
"test:show" = "pytest &&\npython -c 'import webbrowser as w;w.open(\"http://127.0.0.1:8080\")' &&\npython -m http.server 8080 -b localhost -d htmlcov\n"
lint = "pre-commit run -a"
doc = "python -m sphinx -n -T -E -W docs docs/_build/html"
"doc:show" = """python -m sphinx -n -T -E -W docs docs/_build/html &&
python -c 'import webbrowser as w;w.open("http://127.0.0.1:8089")' &&
python -m http.server 8089 -b localhost -d docs/_build/html"""

[tool.project-config]
cache = "5 minutes"
style = [
  "gh://mondeja/project-config-styles/python/base.json5",
  "gh://mondeja/project-config-styles/python/single-quotes.json5",
  "gh://mondeja/project-config-styles/python/line-length-80.json5",
  "gh://mondeja/project-config-styles/python/version/min-37.json5",
  "gh://mondeja/project-config-styles/python/tests.json5",
  "gh://mondeja/project-config-styles/python/sphinx.json5",
  "gh://mondeja/project-config-styles/python/readthedocs.json5",
  "gh://mondeja/project-config-styles/python/google-docstrings.json5"
]

[tool.pytest.ini_options]
addopts = "-s --cov=mdpo --cov-report=html"

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__\\(",
  "raise NotImplementedError",
  "@(abc\\.)?abstractmethod",
  "if __name__ == [\"']__main__[\"']:",
  "if '-h' in args or '--help' in args:"
]

[tool.flakeheaven]
inline-quotes = "single"
max-line-length = 80
pytest-fixture-no-parentheses = true
pytest-parametrize-values-type = "tuple"
docstring-convention = "google"
unused-arguments-ignore-abstract-functions = true

[tool.flakeheaven.plugins]
pycodestyle = ["+*", "-W503"]
pyflakes = ["+*"]
pylint = ["+*"]
flake8-builtins = ["+*"]
flake8-comprehensions = ["+*"]
flake8-docstrings = ["+*", "-D107", "-D105"]
flake8-executable = ["+*"]
flake8-implicit-str-concat = ["+*"]
flake8-print = ["+*"]
flake8-printf-formatting = ["+*"]
flake8-pytest-style = ["+*"]
flake8-bugbear = ["+*"]
flake8-encodings = ["+*"]
flake8-no-pep420 = ["+*"]
flake8-absolute-import = ["+*"]
flake8-unused-arguments = ["+*"]
flake8-slots = ["+*"]
dlint = ["+*"]

[tool.flakeheaven.exceptions."docs/**"]
flake8-print = ["-T201"]
flake8-docstrings = ["-D100", "-D101", "-D102"]
flake8-no-pep420 = ["-INP001"]

[tool.flakeheaven.exceptions."tests/**"]
flake8-docstrings = [
  "-D100",
  "-D101",
  "-D102",
  "-D103",
  "-D104",
  "-D107",
  "-D205",
  "-D415"
]
flake8-no-pep420 = ["-INP001"]

[tool.flakeheaven.exceptions."src/**/*.py"]
flake8-docstrings = ["-D101", "-D102", "-D103", "-D107"]

[tool.flakeheaven.exceptions."src/md.py"]
flake8-docstrings = ["-D101", "-D102", "-D107"]

[tool.isort]
lines_after_imports = 2
multi_line_output = 3
line_length = 79
use_parentheses = true
combine_as_imports = true
include_trailing_comma = true
remove_redundant_aliases = true
known_tests = "tests"
sections = [
  "FUTURE",
  "STDLIB",
  "THIRDPARTY",
  "FIRSTPARTY",
  "TESTS",
  "LOCALFOLDER"
]
py_version = 37
extra_standard_library = [
  "contextvars",
  "dataclasses",
  "importlib.resources",
  "importlib.metadata",
  "zoneinfo",
  "graphlib",
  "tomllib",
  "wsgiref.types"
]
